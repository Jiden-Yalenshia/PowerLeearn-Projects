# Import necessary libraries
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris

# ---------------------------
# Task 1: Load and Explore the Dataset
# ---------------------------

try:
    # Load the Iris dataset from sklearn
    iris_data = load_iris()
    
    # Convert to pandas DataFrame
    df = pd.DataFrame(data=iris_data.data, columns=iris_data.feature_names)
    df['species'] = pd.Categorical.from_codes(iris_data.target, iris_data.target_names)

    # Display first few rows
    print("First 5 rows of the dataset:")
    print(df.head())

    # Explore structure
    print("\nDataset info:")
    print(df.info())

    # Check for missing values
    print("\nMissing values in each column:")
    print(df.isnull().sum())

    # Clean data (Iris dataset has no missing values, but here's the standard way)
    df.fillna(df.mean(), inplace=True)

except Exception as e:
    print(f"Error loading dataset: {e}")

# ---------------------------
# Task 2: Basic Data Analysis
# ---------------------------

try:
    # Basic statistics for numerical columns
    print("\nBasic statistics:")
    print(df.describe())

    # Group by species and compute mean of numerical columns
    print("\nMean of numerical columns by species:")
    grouped = df.groupby('species').mean()
    print(grouped)

    # Optional: Identify patterns (just printing some insights)
    print("\nObservation: Petal length and petal width differ significantly between species.")

except Exception as e:
    print(f"Error during analysis: {e}")

# ---------------------------
# Task 3: Data Visualization
# ---------------------------

try:
    sns.set(style="whitegrid")

    # 1. Line Chart (trends over index; not time series in Iris, but we can simulate)
    plt.figure(figsize=(8, 4))
    for species in df['species'].unique():
        subset = df[df['species'] == species]
        plt.plot(subset.index, subset['sepal length (cm)'], marker='o', label=species)
    plt.title('Sepal Length Trend by Species')
    plt.xlabel('Index')
    plt.ylabel('Sepal Length (cm)')
    plt.legend()
    plt.show()

    # 2. Bar Chart (average petal length per species)
    plt.figure(figsize=(6, 4))
    sns.barplot(x=grouped.index, y=grouped['petal length (cm)'])
    plt.title('Average Petal Length per Species')
    plt.ylabel('Petal Length (cm)')
    plt.xlabel('Species')
    plt.show()

    # 3. Histogram (distribution of sepal width)
    plt.figure(figsize=(6, 4))
    plt.hist(df['sepal width (cm)'], bins=10, color='skyblue', edgecolor='black')
    plt.title('Distribution of Sepal Width')
    plt.xlabel('Sepal Width (cm)')
    plt.ylabel('Frequency')
    plt.show()

    # 4. Scatter Plot (sepal length vs petal length)
    plt.figure(figsize=(6, 4))
    sns.scatterplot(data=df, x='sepal length (cm)', y='petal length (cm)', hue='species', palette='Set1')
    plt.title('Sepal Length vs Petal Length by Species')
    plt.xlabel('Sepal Length (cm)')
    plt.ylabel('Petal Length (cm)')
    plt.legend()
    plt.show()

except Exception as e:
    print(f"Error during visualization: {e}")
